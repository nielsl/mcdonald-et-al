#!/usr/bin/env perl

use strict;
use warnings FATAL => qw ( all );

use Getopt::Long;

use Common::Config;
use Common::Messages;
use Common::Cluster;

my ( $prog_name, $usage, $signature, @msgs, $acctfile, $acctpath, $args );

$prog_name = ( split "/", $0 )[-1];
$signature = &Common::Config::get_signature();

$acctpath = &Common::Cluster::accts_file;
$acctfile = File::Basename::basename( $acctpath );

$usage = qq (
Program $prog_name, February 2009.

Stops a running job. The job is identified by its ID, which can be seen 
with the clu_jobs script. Usage and command line arguments,

$prog_name job_id [ arguments ]

       [ --delete ]   Deletes job directory - OPTIONAL (off)

  [ --slaves name ]   Slave configuration file - OPTIONAL ($acctfile)
  [ --filter expr ]   Slave name filter expression - OPTIONAL (none)
 [ --timeout secs ]   Connection timeouts - OPTIONAL (5 seconds)
       [ --silent ]   Suppress progress messages - OPTIONAL (on)

Usage example:

1\) $prog_name 18-FEB-2009-21:33:09  --nodelete

Example 1 stops a given job but does not delete its directory with 
input/output files and status information.

$signature
);

&Common::Messages::print_usage_and_exit( $usage );

# >>>>>>>>>>>>>>>>>>>>>>>> GET AND VALIDATE INPUT <<<<<<<<<<<<<<<<<<<<<<<<

$args = &Common::Config::get_commandline(
    {
        "slaves=s" => $acctpath,
        "filter=s" => undef,
        "timeout=s" => undef,
        "silent!" => 1,
        "delete!" => 0,
    });

# >>>>>>>>>>>>>>>>>>>>>>>>>>>>> RUN PROGRAMS <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

local $Common::Messages::silent = $args->silent;

&echo( "\n" );
&echo_bold( qq (Stopping $ARGV[0]:\n) );

@msgs = &Common::Cluster::stop_jobs(
    undef,
    {
        "jobids" => (join ",", @ARGV),
        "acctfile" => $args->slaves,
        "acctexpr" => $args->filter,
        "timeout" => $args->timeout,
        "silent" => $args->silent,
        "delete" => $args->delete,
    });

if ( @msgs ) {
    &echo_messages( \@msgs );
    exit;
}    

&echo_bold( qq (done\n\n) );

__END__
