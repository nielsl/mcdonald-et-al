#!/usr/bin/env perl

# -*- perl -*-

use strict;
use warnings FATAL => qw ( all );

use Common::Config;
use Common::Messages;

use Ali::Storage;
use Ali::Help;

my ( $prog_name, $signature, $usage, $args, $seqs, $out_formats );

# >>>>>>>>>>>>>>>>>>>>>>>>>>>>> USAGE <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

$prog_name = ( split "/", $0 )[-1];
$signature = &Common::Config::get_signature();

$usage = qq (
Program $prog_name, April 2011.

Fetches alignments or aligned sequences from a named alignment file and 
streams them to file or STDOUT. ID's and sub-alignment locations can be
on the command line, be piped from STDIN and/or read from a file. See 
the help option. Command line arguments are,

  --alifile   Input alignment file (undef)
  --locfile   Input alignment locations file (undef)

  --outfile   Output sequence file path (<stdout>)
  --errfile   Write error messages (warnings to screen)

   --append   Appends to output file (off)
  --clobber   Overwrites output file (off)
   --silent   Prints no progress messages (off)

     --help   Prints various $prog_name help (off)
    
Examples,

1\) $prog_name U1 U2 --alifile rfam.stockholm
2\) $prog_name --alifile 16s.fa --locfile locs.list 

Example 1 gets two alignments, named by their ids, from a stockholm 
formatted version of Rfam. Example 2 gets many entries from a given 16S 
alignment and file of locators. Both examples return only whole entries, 
sequence strings and sub-sequences are not yet supported. The locators 
can be either 'alignment-id' or 'alignment-id:sequence-id'.

Author: $signature
);

&Common::Messages::print_usage_and_exit( $usage );

# >>>>>>>>>>>>>>>>>>>>>>>>>>> GET OPTIONS <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

$args = &Common::Config::get_commandline(
    {
        "help:s" => undef,
	"alifile=s" => undef,
        "locfile=s" => undef,
#        "ssize:i" => 4_000_000,
        "outfile=s" => undef,
        "errfile=s" => undef,
        "clobber!" => 0,
        "append!" => 0,
	"silent!" => 0,
    });

# >>>>>>>>>>>>>>>>>>>>>>>>>> GET SEQUENCES <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

if ( defined $args->help )
{
    print &Ali::Help::dispatch( $prog_name, $args->help );
    exit;
}
else
{
    $args->delete_field( "help" );

    $args->add_field( "loclist" );
    $args->loclist( \@ARGV );
    
    &Ali::Storage::fetch_cmdline(
        $args->alifile,
        {
            "loclist" => $args->loclist,
            "locfile" => $args->locfile,
#            "ssize" => $args->ssize,
            "outfile" => $args->outfile,
            "errfile" => $args->errfile,
            "clobber" => $args->clobber,
            "append" => $args->append,
            "silent" => $args->silent,
            "stdin" => 1,
        });
}

__END__
