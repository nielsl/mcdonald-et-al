#!/usr/bin/env perl

use strict;
use warnings FATAL => qw ( all );

use Getopt::Long;

use Common::Config;
use Common::Messages;
use Common::Cluster;

my ( $prog_name, $usage, $signature, $args, $acctfile, $acctpath, @msgs );

$prog_name = ( split "/", $0 )[-1];
$signature = &Common::Config::get_signature();

$acctpath = &Common::Cluster::accts_file;
$acctfile = File::Basename::basename( $acctpath );

$usage = qq (
Program $prog_name, January 2009.

Lists files and directories on all nodes, with names and sizes. Usage and
command line arguments,

$prog_name path [ arguments ]

    [ --recursive ]   Includes sub-directories and files - OPTIONAL (off)
         [ --dirs ]   Includes directories - OPTIONAL (on)
        [ --files ]   Includes files - OPTIONAL (on)

  [ --slaves name ]   Slave configuration file - OPTIONAL ($acctfile)
  [ --filter expr ]   Slave name filter expression - OPTIONAL (none)
 [ --timeout secs ]   Connection timeouts - OPTIONAL (5 seconds)
       [ --silent ]   Suppress progress messages - OPTIONAL (off)

The path may be specified with shell syntax that all slave machines support,
such as asterisks as wildcards. Usage examples:

1\) $prog_name Software/bin/*.simscan
2\) $prog_name Data/Humgen/*.fasta 
3\) $prog_name . --nodirs --recursive

Example 1 lists all files in the "Software/bin" folder that ends with 
"simscan". Example 2 lists all fasta files in a given data directory. In 
example 3 all files are listed with full directory paths throughout the 
whole file hierarchy, but excluding directories. This last way gives a 
good view of where all files are, and their sizes. 

$signature
);

&Common::Messages::print_usage_and_exit( $usage );

# >>>>>>>>>>>>>>>>>>>>>>>>>> GET ARGUMENTS <<<<<<<<<<<<<<<<<<<<<<<<<<

$args = &Common::Config::get_commandline(
    {
        "slaves=s" => $acctpath,
        "filter=s" => undef,
        "recursive!" => 0,
        "dirs!" => 1,
        "files!" => 1,
        "timeout:i" => undef,
        "silent!" => 1,
    });

# >>>>>>>>>>>>>>>>>>>>>>>>>>> LIST FILES <<<<<<<<<<<<<<<<<<<<<<<<<<<<

&Common::Cluster::slave_files(
    undef,
    {
        "path" => $ARGV[0],
        "acctfile" => $args->slaves,
        "acctexpr" => $args->filter,
        "recursive" => $args->recursive,
        "dirs" => $args->dirs,
        "files" => $args->files,
        "format" => "ascii",
        "timeout" => $args->timeout,
        "silent" => $args->silent,
    });

__END__
