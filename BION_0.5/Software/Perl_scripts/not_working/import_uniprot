#!/usr/bin/env perl

# -*- perl -*- 

use strict;
use warnings FATAL => qw ( all );

use Getopt::Long;

use Import::Uniprot;
use Common::Config;

my ( $prog_name, $signature, $usage );

$prog_name = ( split "/", $0 )[-1];
$signature = &Common::Config::get_signature();

# >>>>>>>>>>>>>>>>>>>>>>>> PRINT USAGE <<<<<<<<<<<<<<<<<<<<<<<<<<<

$usage = qq (
Program $prog_name, January 2004.

This program builds a database from the Uniprot sources,
making the sequence and cross-references available for search
and retrieval. 

   --readonly   [ D = on; parsing, no database update ]
 --noreadonly   [ D = off; starts the database update ]
       --keep   [ D = on; keeps database-ready tables ]
     --nokeep   [ D = off; deletes database-ready tables ]

The default --readonly option will print screen messages and 
parse the files, but will not update the databases; this way
one can do a "test-run" to see if it is safe to start the real 
update of the databases. The --noreadonly option loads the 
data into the database after completely erasing the old 
database if any. 

Author: $signature

);

print STDERR $usage and exit if not @ARGV;

# >>>>>>>>>>>>>>>>>>>>>> GET ARGUMENTS <<<<<<<<<<<<<<<<<<<<<<<<

# Defaults, 

my $cl_readonly = 1;
my $cl_keep = 1;
my $cl_headers = 1;

if ( not &GetOptions (
                      "readonly!" => \$cl_readonly,
                      "keep!" => \$cl_keep,
                      "headers!" => \$cl_headers,
                     ) )
{
    exit;
}

# >>>>>>>>>>>>>>>>>>> BUILD RELEASE <<<<<<<<<<<<<<<<<<<<<<<<<<<

&echo( "\n" ) if $cl_headers;

if ( $cl_readonly ) {
    &echo_bold( "Importing Uniprot (readonly) : \n" ) if $cl_headers;
} else {
    &echo_bold( "Importing Uniprot : \n" ) if $cl_headers;
}

&Import::Uniprot::load_database( $cl_readonly, $cl_keep );

&echo_bold( "Finished Uniprot\n" ) if $cl_headers;
&echo( "\n" ) if $cl_headers;

# >>>>>>>>>>>>>>>>>>>> END OF MAIN PROGRAM <<<<<<<<<<<<<<<<<<<<

__END__
