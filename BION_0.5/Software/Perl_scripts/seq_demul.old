#!/usr/bin/env perl

# -*- perl -*-

use strict;
use warnings FATAL => qw ( all );

use Common::Config;
use Common::Messages;

use Seq::Help;
use Seq::Demul;

my ( $prog_name, $signature, $usage, $args, $seqs, $out_formats );

# >>>>>>>>>>>>>>>>>>>>>>>>>>>>> USAGE <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

$prog_name = ( split "/", $0 )[-1];
$signature = &Common::Config::get_signature();

$usage = qq (
Program $prog_name, January 2012.

Separates sequences based on match near the sequence beginnings 
with a given set of tag sub-sequences. Sequences can be given as
a single file or read from STDIN. Tags are read from a table file,
and there are as many output files as tags. Command line arguments
are, with defaults in parantheses,

   --recipe   Recipe file (none)
   --seqfmt   Sequence format (detected unless piped input)
  --barfile   Input table file with barcodes 
  --maxdist   Max. distance from beginning (1)
   --outdir   Output directory (current directory)
   --outpre   Output file name prefix (taken from file names)
  --combine   Append reverse files to forward .F files (off)
 --barnames   Output file names include barcodes (off)
  --misfile   Create (input).NOMATCH file with non-matches (off)
    --stats   Statistics output file ($prog_name.stats)

   --dryrun   Prints counts without creating outputs (off)
   --append   Appends to output files (off)
  --clobber   Overwrites output files (off)
   --silent   Prints no progress messages (off)

     --help   Prints various $prog_name help (off)
    
Examples,

1\) $prog_name seqs.fq --barfile tag.tab --dry
2\) cat *.fq | $prog_name --barfile tag.tab --outdir=Results 

Author: $signature
);

&Common::Messages::print_usage_and_exit( $usage );

# >>>>>>>>>>>>>>>>>>>>>>>>>>> GET OPTIONS <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

$args = &Common::Config::get_commandline(
    {
        "recipe=s" => undef,
        "barfile=s" => undef,
        "seqfile=s" => undef,
        "seqfmt=s" => undef,
        "misfile!" => undef,
        "maxdist=i" => undef,
        "outdir=s" => undef,
        "outpre=s" => undef,
        "stats=s" => undef,
        "combine!" => undef,
        "barnames!" => undef,
        "dryrun!" => 0,
        "append!" => 0,
        "clobber!" => 0,
	"silent!" => 0,
        "help:s" => undef,
    });

$args->seqfile( $ARGV[0] );

# >>>>>>>>>>>>>>>>>>>>>>>>>> GET SEQUENCES <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

if ( defined $args->help )
{
    print &Seq::Help::dispatch( $prog_name, $args->help );
    exit;
}
else
{
    $args->delete_field( "help" );
    &Seq::Demul::demul_bar( $args );
}

__END__
