#!/usr/bin/env perl

use strict;
use warnings FATAL => qw ( all );

use Getopt::Long;

use Common::Config;
use Common::Messages;
use Common::Cluster;

my ( $prog_name, $usage, $signature, $args, $acctfile, $acctpath, $basedir );

$prog_name = ( split "/", $0 )[-1];
$signature = &Common::Config::get_signature();

$acctpath = &Common::Cluster::accts_file;
$acctfile = File::Basename::basename( $acctpath );

$usage = qq (
Program $prog_name, January 2009.

Runs a command on each slave machine and shows its outputs, if any. This 
is useful for repairs mostly and is not good for running normal jobs. 
Usage and command line arguments:

$prog_name command 

  [ --slaves name ]   Slave configuration file - OPTIONAL ($acctfile)
  [ --filter expr ]   Slave name filter expression - OPTIONAL (none)
 [ --timeout secs ]   Connection timeouts - OPTIONAL (5 seconds)
       [ --silent ]   Suppress progress messages - OPTIONAL (on)

Usage examples:

1\) $prog_name "cd Software/simscan; make clean"
2\) $prog_name "touch Outputs/Simscan/humgen.simscan"

Example 1 cleans all non-source files in a software directory. Example 2
ensures the existence on all machines of a certain file. 

WARNING: Given the wrong command, this program can of course do great 
         damage. Use with care. 

$signature
);

&Common::Messages::print_usage_and_exit( $usage );

# >>>>>>>>>>>>>>>>>>>>>>>> GET AND VALIDATE INPUT <<<<<<<<<<<<<<<<<<<<<<<<

$args = &Common::Config::get_commandline(
    {
        "slaves=s" => $acctpath,
        "filter=s" => undef,
        "timeout:i" => undef,
        "silent!" => 1,
    });

if ( scalar @ARGV > 1 ) {
    &echo_messages([["ERROR", qq (Please enter only one command enclosed in quotes) ]] );
    exit;
}

# >>>>>>>>>>>>>>>>>>>>>>>>>>>> PROCESS EACH NODE <<<<<<<<<<<<<<<<<<<<<<<<<<<

local $Common::Messages::silent = $args->silent;

&echo_bold( qq (\nCommand:\n) );

$basedir = &Common::Cluster::config_slave_paths->{"base_dir"};

&Common::Cluster::run_command(
    undef,
    {
        "command" => $ARGV[0],
        "acctfile" => $args->slaves,
        "acctexpr" => $args->filter,
        "timeout" => $args->timeout,
        "silent" => $args->silent,
        "nolog" => 1,
    });

&echo_bold( qq (done\n\n) );

__END__
